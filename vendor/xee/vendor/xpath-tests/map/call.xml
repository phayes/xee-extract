<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="map-call"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <description>Tests for the calling a map as a function</description>
    <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-map-get"/>
    <dependency type="spec" value="XP31+ XQ31+ XT30+"/>

    <test-case name="map-call-001">
        <description>Integer key, data is present</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",4:"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(4)</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-002">
        <description>Integer key, data is absent</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",4:"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(23)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-003">
        <description>Empty map, data is absent</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{}(23)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-004">
        <description>Singleton map, data is absent</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map:entry("foo", "bar")("baz")</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-005">
        <description>Singleton map, data is present</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map:entry("foo", "bar")("foo")</test>
        <result>
            <assert-string-value>bar</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-006">
        <description>Singleton map, untyped atomic search key, data is present</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map:entry("foo", "bar")(xs:untypedAtomic("foo"))</test>
        <result>
            <assert-string-value>bar</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-007">
        <description>Singleton map, untyped atomic data, data is present</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map:entry(xs:untypedAtomic("foo"), "bar")("foo")</test>
        <result>
            <assert-string-value>bar</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-008">
        <description>Singleton map, untyped atomic data, does not match numeric key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map:entry(xs:untypedAtomic("12"), "bar")(12)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-009">
        <description>Singleton map, untyped atomic search key, does not match numeric data</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map:entry(12, "bar")(xs:untypedAtomic("12"))</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-010">
        <description>Integer key in data, double in search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",4:"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(4.0e0)</test>
        <result>
             <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-011">
        <description>Double key in data, integer in search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",4.0e0:"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(4)</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-012">
        <description>String key in data, uri in search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday","urn:weds":"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(xs:anyURI("urn:weds"))</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-013">
        <description>URI key in data, string in search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",xs:anyURI("urn:weds"):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}("urn:weds")</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-014">
        <description>NaN as search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",xs:anyURI("urn:weds"):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(number('NaN'))</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-015">
        <description>NaN in data and as search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",number('NaN'):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(number('NaN'))</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-016">
        <description>Contains in a largish map</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>
                map:merge(((for $i in 1 to 1000 return map:entry($i, $i*$i)),
                         (for $i in 2000 to 3000 return map:entry($i, $i+30)),
                         (for $i in 2500 to 3500 return map:entry($i, $i+30))))
                         (3260)</test>
        <result>
            <assert-eq>3290</assert-eq>
        </result>
    </test-case>
    <test-case name="map-call-017">
        <description>duration as search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",xs:duration('P1Y'):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(xs:yearMonthDuration('P12M'))</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-018">
        <description>QName as search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <dependency type="feature" value="higherOrderFunctions"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",function-name(abs#1):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}(xs:QName('fn:abs'))</test>
        <result>
            <assert-string-value>Wednesday</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-019">
        <description>get() returns () when the value is empty</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",4:(),5:"Thursday",6:"Friday",7:"Saturday"}(4)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-020">
        <description>default collation is not case-blind</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{"su":"Sunday","mo":"Monday","tu":"Tuesday","we":"Wednesday","th":"Thursday","fr":"Friday","sa":"Saturday"}("TH")</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    <test-case name="map-call-021">
        <description>Non-singleton map, untyped atomic search key, data is present</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{"foo":"bar", "bar":"foo"}(xs:untypedAtomic("foo"))</test>
        <result>
            <assert-string-value>bar</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-022">
        <description>Non-singleton map, untyped atomic data, data is present</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{xs:untypedAtomic("foo"):"bar", xs:untypedAtomic("bar"):"foo"}("foo")</test>
        <result>
            <assert-string-value>bar</assert-string-value>
        </result>
    </test-case>
    <test-case name="map-call-023">
        <description>Get from map with and without timezone</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <dependency type="spec" value="XP31+ XQ31+"/>
        <test>map{current-dateTime():100, current-dateTime()=>adjust-dateTime-to-timezone(()):101}(current-dateTime())</test>
        <result>
            <assert-string-value>100</assert-string-value>
        </result>
    </test-case>
 
    <test-case name="map-call-025">
        <description>NaN as a key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{number('NaN'):100, 12e6:101}(xs:float('NaN'))</test>
        <result>
            <assert-eq>100</assert-eq>
        </result>
    </test-case>
           
 
    
    
    <test-case name="map-call-901">
        <description>Empty sequence as search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",number('NaN'):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}((1 to 5)[10])</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    <test-case name="map-call-902">
        <description>Non singleton sequence as search key</description>
        <created by="Michael Kay, Saxonica" on="2023-10-28"/>
        <environment ref="map"/>
        <test>map{1:"Sunday",2:"Monday",3:"Tuesday",number('NaN'):"Wednesday",5:"Thursday",6:"Friday",7:"Saturday"}((1 to 5)[. mod 2 = 0])</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
 
    

</test-set>
