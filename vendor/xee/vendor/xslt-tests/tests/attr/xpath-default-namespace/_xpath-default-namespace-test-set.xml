<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="xpath-default-namespace">
   <description>Tests xpath-default-namespace</description>
   <environment name="xpath-default-namespace-01">
      <source role="." file="xpath-default-namespace-01.xml"/>
   </environment>
   <environment name="xpath-default-namespace-02">
      <source role=".">
         <content><![CDATA[<doc xmlns="http://example.org/hal">
<item><subitem>a</subitem></item>
<item><subitem>b</subitem></item>
	
	
	<item>
		
		
		
		
		<subitem>c</subitem>
		
		
		
	</item>
</doc> ]]></content>
      </source>
   </environment>
   <environment name="xpath-default-namespace-03">
      <source role="." file="xpath-default-namespace-03.xml"/>
   </environment>
   <environment name="xpath-default-namespace-04">
      <source role="." file="xpath-default-namespace-04.xml"/>
   </environment>
   <environment name="xpath-default-namespace-05">
      <source role=".">
         <content><![CDATA[<doc/> ]]></content>
      </source>
      <schema role="stylesheet-import" file="schemaForDefaultnamespace.xsd" xsd-version="1.0"/>
   </environment>
   <environment name="xpath-default-namespace-06">
      <source role="." file="xpath-default-namespace-06.xml"/>
   </environment>
   <environment name="xpath-default-namespace-07">
      <source role="." file="xpath-default-namespace-07.xml" validation="strict"/>
      <schema role="source-reference" file="schemaForDefaultnamespace.xsd" xsd-version="1.0"/>
   </environment>
   <environment name="xpath-default-namespace-08">
      <source role="." file="xpath-default-namespace-08.xml"/>
   </environment>
   <environment name="xpath-default-namespace-09">
      <source role=".">
         <content><![CDATA[ 

<doc test="attr on doc elem">
</doc>
]]></content>
      </source>
   </environment>
   <environment name="xpath-default-namespace-10">
      <source role="." file="xpath-default-namespace-10.xml"/>
   </environment>
   <environment name="xpath-default-namespace-11">
      <source role="." file="xpath-default-namespace-11.xml"/>
   </environment>
   <environment name="xpath-default-namespace-12">
      <source role=".">
         <content><![CDATA[<a><b><c/></b></a>]]></content>
      </source>
   </environment>

   <test-case name="xpath-default-namespace-0101">
      <description>Test with xpath-default-namespace attribute declared on the xsl:stylesheet element.</description>
      <keywords>xsl:stylesheet</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="Michael Kay" on="2017-02-27" change="whitespace resilience"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0101.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/alpha = "a,atr1 atr2 atr3,atr1 atr2 atr3"</assert>
            <assert>/out/group[1] = "a"</assert>
            <assert>/out/group[2] = "b"</assert>
            <assert>/out/group[3] = "c"</assert>
            <assert>/out/beta/elem[1] = "1 a"</assert>
            <assert>/out/beta/elem[2] = "2 b"</assert>
            <assert>/out/beta/elem[3] = "3 c"</assert>
            <assert>/out/beta/elem[4] = "4 Good Morning!"</assert>
            <assert>/out/beta/elem[5] = "5 Good Afternoon!"</assert>
            <assert>/out/beta/elem[6] = "6 Goodnight!"</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0102">
      <description>Test with xpath-default-namespace declared on the element that itself contains XPath expressions with unprefixed element names inside a select attribute.</description>
      <keywords> xsl:value-of</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="Michael Kay" on="2017-02-27" change="whitespace resilience"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0102.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/alpha = ",,atr1 atr2 atr3"</assert>
            <assert>empty(/out/group)</assert>
            <assert>/out/beta = ""</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0103">
      <description>
      	Test with xpath-default-namespace declared on the parent of an element that contains 
      	XPath expressions with unprefixed element names in: 
      	- @select of xsl:value-of and xsl:apply-templates 
      	- @group-starting-with of xsl:for-each-group
      </description>
      <keywords> lre</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0103.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>a,atr1 atr2 atr3,atr1 atr2 atr3<group>a</group><group>b</group><group>c</group></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0104">
      <description>
      	Testcase to show that xpath-default-namespace must be in the XSLT namespace if the parent element 
      	is not in the XSLT namespace (i.e. LRE).
      </description>
      <keywords>lre namespace-resolution</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0104.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<output><out xpath-default-namespace="http://example.org/hal">,</out><out>atr1 atr2 atr3</out></output>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0105">
      <description>
      	Test with xpath-default-namespace declared on an ancestor(not parent or xsl:stylesheet) of the element
      	 that contains XPath expressions with unprefixed element names in: 
      	 - @select of xsl:value-of, xsl:apply-templates, xsl:with-param 
      	 - @count of xsl:number 
      	 - @group-starting-with of xsl:for-each-group</description>
      <keywords>lre namespace-resolution</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0105.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><result>a,atr1 atr2 atr3,atr1 atr2 atr3<group>b</group><group>b</group><group>b</group></result></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0106">
      <description>Test with xpath-default-namespace declared and then reset it back to null for some elements.</description>
      <keywords>undeclared-xpath-default-namespace xsl:value-of xsl:apply-templates _IMPROVE:does-not-test-null-namespace</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="Michael Kay" on="2017-02-27" change="whitespace resilience"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0106.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/out/alpha = "a,,atr1 atr2 atr3"</assert>
            <assert>/out/group[1] = "a"</assert>
            <assert>/out/group[2] = "b"</assert>
            <assert>/out/group[3] = "c"</assert>
            <assert>/out/beta = ""</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0107">
      <description>Testcase to verify that the default namespace is not used for unprefixed elements and the only way to set a namespace for them is by use of xpath-default-namespace.</description>
      <keywords> xsl:value-of</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <modified by="Michael Kay" on="2017-02-27" change="whitespace resilience"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0107.xsl"/>
      </test>
      <result>
         <assert>/Q{http://example.org/hal}out = ",,atr1 atr2 atr3"</assert>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0108">
      <description>Test with xpath-default-namespace declared on the element that itself contains XPath expressions with unprefixed element names inside a match attribute.</description>
      <keywords> xsl:template</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-01"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0108.xsl"/>
      </test>
      <result>
         <assert-xml file="xpath-default-namespace-0108.out"/>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0201">
      <description>Testcase with xpath-default-namespace and unprefixed element names in the 'elements' attribute of xsl:strip-space.</description>
      <keywords> xsl:strip-space</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-02"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>abc</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0202">
      <description>Testcase with xpath-default-namespace and unprefixed element names in the 'elements' attribute of xsl:preserve-space</description>
      <keywords> xsl:preserve-space</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-02"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0202.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
a
b
	
	
	
		
		
		
		
		c
		
		
		
	
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0301">
      <description>Test with xpath-default-namespace declared and then set to a different value for some elements.</description>
      <keywords>xsl:template lre</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-03"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns="http://example.org/hal"><E1>,,a,atr1 atr2 atr3,atr1 atr2 atr3</E1><E2>Good Morning! Good Afternoon! Goodnight!,Good Afternoon!,,,</E2></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0401">
      <description>Test with xpath-default-namespace attribute and Xpath expressions in xsl:use-when.</description>
      <keywords>xsl:transform xsl:use-when</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-04"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0401.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>attr1 * attr1 * attr1 * </out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0501">
      <description>Show that @xpath-default-namespace does not affect variable names.</description>
      <keywords>xsl:value-of variable-names</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-05"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0501.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>correct</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0502">
      <description>Testcase with @xpath-default-namespace set to the XMLSchema namespace on the parent of a variable that has as="double" attribute.</description>
      <keywords>lre schema-namespace</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-05"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0502.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>true</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0503">
      <description>Testcase with @xpath-default-namespace on the parent of an instruction that has an unprefixed type name in an 'type' attribute.</description>
      <keywords>xsl:type lre</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-05"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0503.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><elem>123-AB</elem></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0601">
      <description>Show that @xpath-default-namespace does not affect attribute names.</description>
      <keywords>xsl:transform attribute-nodes AttributeTest</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-06"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0601.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>atr3</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0701">
      <description>Testcase with @xpath-default-namespace on the parent of a variable that has an unprefixed element name or type name in an 'as' attribute.</description>
      <keywords>xsl:import-schema lre as-attribute</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0701.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>truetruetrue</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0702">
      <description>Test with xpath-default-namespace attribute declared on the xsl:stylesheet element. Tested XPath expressions include unprefixed element and type names in: - @select of xsl:value-of and xsl:apply-templates</description>
      <keywords>xsl:transform xsl:import-schema ElementTest</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0702.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><one>123-AB</one><two>hello</two></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0703">
      <description>Test with xpath-default-namespace declared on the element that itself contains XPath expressions with type names inside @as and @type of an instruction.</description>
      <keywords>xsl:variable xsl:import-schema InstanceOfExpr lre</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0703.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><one>truetruetrue</one><two><elem>123-AB</elem></two></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0801">
      <description>Testcase to verify that an error is raised if the xpath-default-namespace attribute is in the XSLT namespace and its parent element is in the XSLT namespace.</description>
      <keywords>XTSE0090 lre</keywords>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="xpath-default-namespace-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0801.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-0901">
      <description>Test for built-in template rule for attributes.</description>
      <keywords>_IMPROVE:unclear-test</keywords>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="xpath-default-namespace-09"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-0901.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>attr on doc elem</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-1001">
      <description>Test of built-in template for text nodes. For testing this should remain commented out. It shows how all nodes are processed, particularly the text nodes. &lt;xsl:template match="text()"&gt; &lt;xsl:value-of select="position()"/&gt;text:&lt;xsl:value-of select="."/&gt;, &lt;/xsl:template&gt;</description>
      <keywords> _IMPROVE:unclear-test</keywords>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="xpath-default-namespace-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-1001.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1node:,
2node:near-east,
3node:,
4node:east,
5node:,
6node:far-east,
7node:,
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-1101">
      <description>Purpose: Test of built-in template for elements. 
      Use the built-in template for text to show that we hit each descendant</description>
      <keywords> _IMPROVE:unclear-test</keywords>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="xpath-default-namespace-11"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-1101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  WentNearSouth
    WentSouth
      WentFarSouthBackToSouth
    BackToNearSouth
  BackToCentral
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-1102">
      <description>Test of built-in template for elements for a named mode. Should never trigger Should never trigger</description>
      <keywords> _IMPROVE:unclear-test</keywords>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="xpath-default-namespace-11"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-1102.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  WentNearSouth
    WentSouth
      WentFarSouthBackToSouth
    BackToNearSouth
  BackToCentral
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="xpath-default-namespace-1201">
      <description>test whether parameter values are passed unchanged through a built-in template</description>
      <keywords> _IMPROVE:unclear-test</keywords>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="xpath-default-namespace-12"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-1201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<z>Today's flavor: mint</z>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="xpath-default-namespace-1202">
      <description>xpath-default-namespace on the root element of an included stylesheet module (Saxon bug 4660)</description>
      <created by="Michael Kay" on="2020-09-16"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="xpath-default-namespace-1202.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<A xmlns="urn:FOO"><B/></A>]]></assert-xml>
      </result>
   </test-case>
</test-set>