<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="maps">
   <description>Tests maps</description>
   <dependencies>
      <spec value="XSLT30+"/>
   </dependencies>
   
   <environment name="maps-012">
      <stylesheet file="maps-012.xsl"/>
      <source role=".">
         <content><![CDATA[<doc><e ref='1'/></doc>]]></content>
      </source>
   </environment>

   <test-case name="maps-001">
      <description>Basic test of maps in an XSLT 3.0 context</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-06-03" change="align with current spec, make results predictable"/>
      <modified by="Abel Braaksma" on="2014-10-20" change="Since Oct 2014 LCWD, map:new is no longer among us, replaced it with map:merge" />
      <test>
         <stylesheet file="maps-001.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<json>[{"CA":[{"kitchen":{"broiler":"20","toaster":"150"}},{"clothes":{"socks":"510"}}]},{"MA":[{"kitchen":{"blender":"250","toaster":"50"}},{"clothes":{"shirt":"10"}}]}]</json>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="maps-002">
      <description>Test of XSLT 3.0 xsl:map and xsl:map-entry instructions</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-06-03" change="align with current spec, make results predictable"/>
      <modified by="Abel Braaksma" on="2014-10-20" change="Since Oct 2014 LCWD, map:new is no longer among us, replaced it with map:merge" />
      <test>
         <stylesheet file="maps-002.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<json>[{"CA":[{"kitchen":{"broiler":"20","toaster":"150"}},{"clothes":{"socks":"510"}}]},{"MA":[{"kitchen":{"blender":"250","toaster":"50"}},{"clothes":{"shirt":"10"}}]}]</json>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="maps-003">
      <description>Simple computed map</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <test>
         <stylesheet file="maps-003.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<e a="6"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="maps-004">
      <description>Simple computed map using content of xsl:map-entry</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <test>
         <stylesheet file="maps-004.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<e a="5 10 15 20 25"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="maps-005">
      <description>xsl:map-entry creates a map that can be used in its own right</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <test>
         <stylesheet file="maps-005.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<e a="2" b="2"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="maps-006">
      <description>Error if a map used in the content of an element constructor</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-02-18" change="correct expected error code"/>
      <test>
         <stylesheet file="maps-006.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0450"/>
      </result>
   </test-case>

   <test-case name="maps-007">
      <description>Error if a non-map used in the content of xsl:map</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braaksma" on="2014-10-20" change="Error changed, the spec requires this to yield error XTTE3375, not XPTY0004"></modified>
      <test>
         <stylesheet file="maps-007.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3375"/>
      </result>
   </test-case>

   <test-case name="maps-008">
      <description>Error if a xsl:map-entry has both select attribute and content</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <test>
         <stylesheet file="maps-008.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3280"/>
      </result>
   </test-case>
   
   <test-case name="maps-009">
      <description>Mix values with and without timezones</description>
      <created by="Michael Kay" on="2014-08-13"/>
      <modified by="Michael Kay" on="2015-06-09" change="decision reversed by bug 28632"/>
      <test>
         <stylesheet file="maps-009.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert>count(/out/size[.='2']) = 2</assert>
      </result>
   </test-case>
   
   <test-case name="maps-010">
      <description>Mix values with and without timezones</description>
      <created by="Michael Kay" on="2015-06-10"/>
      <modified by="Michael Kay" on="2017-04-30" change="add HOF dependendency"/>
      <modified by="Michael Kay" on="2019-12-13" change="removed unused function which was in a reserved namespace; error case is now map-015"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="maps-010.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <all-of>
           <assert>/out/a = "2"</assert>
           <assert>/out/b = "2:2"</assert>
           <assert>/out/c = "2:2"</assert>
           <assert>/out/d = "1:"</assert>
           <assert>/out/e = "0:"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="maps-011">
      <description>Use map lookup operator</description>
      <created by="Michael Kay" on="2016-12-02"/>
      <test>
         <stylesheet file="maps-011.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <all-of>
            <assert>/out = '51'</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="maps-012">
      <description>Check that key is atomized for function call on maps and arrays</description>
      <created by="Debbie Lockett" on="2017-05-15"/>
      <environment ref="maps-012"/>
      <test>
         <param name="param" select="'map'"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1st</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="maps-013">
      <description>Check that key is atomized for function call on maps and arrays</description>
      <created by="Debbie Lockett" on="2017-05-15"/>
      <environment ref="maps-012"/>
      <test>
         <param name="param" select="'array'"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>first</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="maps-014">
      <description>Maps used in use-when expression</description>
      <created by="Michael Kay" on="2017-10-20"/>
      <test>
         <stylesheet file="maps-014.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>22</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="maps-015">
      <description>Error case: user function in reserved map namespace. Was map-010.</description>
      <created by="Michael Kay" on="2019-12-13"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="maps-015.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0080"/>
      </result>
   </test-case>
   
   <test-case name="maps-016">
      <description>map:contains vs map:get</description>
      <created by="Michael Kay" on="2017-11-22"/>
      <test>
         <stylesheet file="maps-016.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><contains>false</contains><get/></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="maps-017">
      <description>xsl:map-entry with default namespace in @key - Saxon bug 5230</description>
      <created by="Michael Kay" on="2022-01-25"/>
      <environment>
         <source role=".">
            <content><![CDATA[<foo:root xmlns:foo='http://www.example.com'>
      <foo:bar>Hello world</foo:bar>
</foo:root>]]></content>
         </source>
      </environment>
      <test>
         <stylesheet file="maps-017.xsl"/>
      </test>
      <result>
         <assert>/out = '{"Hello world":"greeting"}'</assert>
      </result>
   </test-case>
      
   <test-case name="maps-901a">
      <description>map:new() (without args) should throw error (since Oct 2014 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-901.xsl"/>
         <param name="test-case" select="'map:new()'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-901b">
      <description>map:new(()) (empty seq arg) should throw error (since Oct 2014 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-901.xsl"/>
         <param name="test-case" select="'map:new(())'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-901c">
      <description>map:new(($map)) should throw error (since Oct 2014 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-901.xsl"/>
         <param name="test-case" select="'map:new((map:entry(0, ''no''), map:entry(1, ''yes'')))'"  static="yes"/>
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-901d">
      <description>map:new(($map1, $map2)) should throw error (since Oct 2014 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-901.xsl"/>
         <param name="test-case" select="'map:new(($validmap, map:entry(1, ''yes'')))'"  static="yes"/>
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-901e">
      <description>map:new(($map1, $map2), $collation) should throw error (since Dec 2013 LCWD), collation argument was dropped</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-901.xsl"/>
         <param name="test-case" select="'map:new(($validmap, map:entry(1, ''yes'')), ''http://example.com'')'"  static="yes"/>
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-902a">
      <description>map:for-each-entry((), ()) (empty seq args) should throw error (since Oct 2014 LCWD) (actually, this was illegal in the prev. draft as well)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-902.xsl"/>
         <param name="test-case" select="'map:for-each-entry((),())'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-902b">
      <description>map:for-each-entry($map, $fun) should throw error (since Oct 2014 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <modified by="Michael Kay" on="2014-11-17" change="Change the test to do what it says it does"/>
      <test>
         <stylesheet file="maps-902.xsl"/>
         <param name="test-case" select="'map:for-each-entry(map{1:''test''}, function($a, $b) {($a)})'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>   
   
   <test-case name="maps-903a">
      <description>map:collation(()) (empty seq) should throw error (since Dec 2013 LCWD) (actually, empty seq was illegal in prev draft)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-903.xsl"/>
         <param name="test-case" select="'map:collation(())'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-903b">
      <description>map:collation($map) should throw error (since Dec 2013 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-903.xsl"/>
         <param name="test-case" select="'map:collation(map{1:''test''})'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-903c">
      <description>map:collation($map) should throw error (since Dec 2013 LCWD)</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-903.xsl"/>
         <param name="test-case" select="'map:collation($validmap)'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-904a">
      <description>fn:deep-equal2((), ()) should throw error (since Dec 2013 LCWD), function was used for comparing items that could also be maps</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-904.xsl"/>
         <param name="test-case" select="'deep-equal2((), ())'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-904b">
      <description>fn:deep-equal2($map1, $map2) should throw error (since Dec 2013 LCWD), function was used for comparing items that could also be maps</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-904.xsl"/>
         <param name="test-case" select="'deep-equal2(map{1:''test''}, map{1:''test''})'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-904c">
      <description>fn:deep-equal2($map1, $map2) should throw error (since Dec 2013 LCWD), function was used for comparing items that could also be maps</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-904.xsl"/>
         <param name="test-case" select="'deep-equal2($validmap, $validmap)'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-904d">
      <description>fn:deep-equal2($val1, $val2, $collation) should throw error (since Dec 2013 LCWD), function was used for comparing items that could also be maps</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-904.xsl"/>
         <param name="test-case" select="'deep-equal2(''a'', ''b'', ''http://example.com'')'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>   
   
   <test-case name="maps-905a">
      <description>map{1 := 'a'} should throw error (since Dec 2013 LCWD), syntax of maps has changed</description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <modified by="Michael Kay" on="2014-10-21" change="escaped apostrophes by doubling them"/>
      <modified by="Michael Kay" on="2017-02-18" change="corrected expected error code"/>
      <test>
         <stylesheet file="maps-905.xsl"/>
         <param name="test-case" select="'map{1 := ''a''}'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
      
   <test-case name="maps-906a">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:new()'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906b">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:new(($validmap, $validmap))'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906c">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:collation($validmap)'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906d">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:keys($validmap)'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906e">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:contains($validmap)'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906f">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:get($validmap, ''entry'')'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906g">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:entry(1, ''value'')'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906h">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:remove($validmap, ''key'')'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906i">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:put($validmap, ''key'', ''value'')'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906j">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:size($validmap)'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="maps-906k">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:for-each-entry($validmap, function($a, $b) {$a})'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-906l">
      <description>
            In earlier drafts, namespace http://www.w3.org/2011/xpath-functions/map was used, it should no longer map to the 
            map functions (though officially, these could be considered extension functions, this test assumes that the 
            functions have been remapped to the proper namespace http://www.w3.org/20-05/xpath-functions/map). If this 
            poses testability issues, we should either remove these tests, or make the result error optional.
      </description>
      <created by="Abel Braaksma" on="2014-10-20"/>
      <test>
         <stylesheet file="maps-906.xsl"/>
         <param name="test-case" select="'mapold:for-each($validmap, function($a, $b) {$a})'" static="yes" />
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   
   <test-case name="maps-907">
      <description>
         Incorrect attempt to use xsl:value-of on a map (Saxon bug 2756)
      </description>
      <created by="Michael Kay after Martin Honnen" on="2016-05-24"/>
      <test>
         <stylesheet file="maps-907.xsl"/>
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="FOTY0013"/>
      </result>
   </test-case>
   
   <test-case name="maps-908">
      <description>
         Duplicate keys in xsl:map
      </description>
      <created by="Michael Kay after Martin Honnen" on="2016-05-24"/>
      <test>
         <stylesheet file="maps-908.xsl"/>
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <assert>every $e in /out/* satisfies $e = 'false'</assert>
      </result>
   </test-case>
   
   <test-case name="maps-909">
      <description>
         Empty keys in xsl:map
      </description>
      <created by="Michael Kay after Martin Honnen" on="2022-03-23"/>
      <test>
         <stylesheet file="maps-909.xsl"/>
         <initial-template name="xsl:initial-template"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
</test-set>