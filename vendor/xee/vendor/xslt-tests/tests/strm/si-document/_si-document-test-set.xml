<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="si-document">
   <description>xsl:document with streaming</description>
   
   
   <environment name="si-document-A">
     <stylesheet file="si-document-A.xsl"/>
   </environment>
   
   <environment name="si-document-B">
     <schema file="../docs/loans.xsd"/>
     <stylesheet file="si-document-B.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   
   
   <test-case name="si-document-001">
      <description>Use xsl:document: atomic values, consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-001"/>
      </test>
      <result>
         <assert>/out = "-15.00-5.00-2.33-248.05"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-002">
      <description>Use xsl:document: atomic values, consuming and non-consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-002"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05 101 102"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-003">
      <description>Use xsl:document: climbing posture</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-003"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-004">
      <description>Use xsl:document: climbing posture</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-004"/>
      </test>
      <result>
         <assert>/out = "-15.00 -5.00 -2.33 -248.05 101 102"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-005">
      <description>Use xsl:document: striding posture, element nodes</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-005"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><PRICE>4.95</PRICE><PRICE>6.58</PRICE><PRICE>4.95</PRICE><PRICE>4.95</PRICE><PRICE>16.47</PRICE><PRICE>16.47</PRICE></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-document-006">
      <description>Use xsl:document: striding posture, text nodes</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-006"/>
      </test>
      <result>
         <assert>/out = "4.956.584.954.9516.4716.47"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-007">
      <description>Use xsl:document: striding posture, text nodes plus atomic values</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-007"/>
      </test>
      <result>
         <assert>/out = "4.956.584.954.9516.4716.47101102"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-008">
      <description>Use xsl:document: striding posture, element nodes plus grounded elements</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-008"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><PRICE>100.00</PRICE><PRICE>101.00</PRICE><PRICE>4.95</PRICE><PRICE>6.58</PRICE><PRICE>4.95</PRICE><PRICE>4.95</PRICE><PRICE>16.47</PRICE><PRICE>16.47</PRICE></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="si-document-009">
      <description>Use xsl:document: descendant text nodes</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-009"/>
      </test>
      <result>
         <assert>/out = "4.956.584.954.9516.4716.47"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-010">
      <description>Use xsl:document: descendant text nodes plus atomic values</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-010"/>
      </test>
      <result>
         <assert>/out = "1001014.956.584.954.9516.4716.47"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-011">
      <description>Use xsl:document: whole document unchanged</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-011"/>
      </test>
      <result>
         <all-of>
           <assert>/out/head</assert>
           <assert>/out/BOOKLIST/BOOKS</assert>
           <assert>/out/BOOKLIST/CATEGORIES</assert>
           <assert>/out/tail</assert>
         </all-of>  
      </result>
   </test-case>
   
   <test-case name="si-document-022">
      <description>Use xsl:document: validation="strip" (non-schema-aware)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-022"/>
      </test>
      <result>
         <assert>/out/* instance of element(*, xs:untyped)</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-023">
      <description>Use xsl:document: validation="preserve" (non-schema-aware)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-023"/>
      </test>
      <result>
         <assert>/out/* instance of element(*, xs:untyped)</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-024">
      <description>Use xsl:document: validation="lax" (non-schema-aware)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-024"/>
      </test>
      <result>
         <assert>/out/* instance of element(*, xs:untyped)</assert>
      </result>
   </test-case>
   
<!--
   <test-case name="si-document-040">
      <description>Use xsl:document: with on-empty (nothing selected)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-040"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-041">
      <description>Use xsl:document: with on-empty</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-041"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-042">
      <description>Use xsl:document: with on-empty</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-042"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-043">
      <description>Use xsl:document: with on-empty</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-043"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-044">
      <description>Use xsl:document: with on-empty</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-044"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-045">
      <description>Use xsl:document: with on-empty</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-045"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-046">
      <description>Use xsl:document: with on-empty</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-046"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-047">
      <description>Use xsl:document: with on-empty (empty element constructed)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-047"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-048">
      <description>Use xsl:document: with on-empty (empty document constructed)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-A"/>
      <test>
         <initial-template name="d-048"/>
      </test>
      <result>
         <assert>/out/a</assert>
      </result>
   </test-case>
-->   
   <test-case name="si-document-101">
      <description>Use xsl:document: schema-aware, validation=strict</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-101"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
  <test-case name="si-document-102">
      <description>Use xsl:document: schema-aware, validation=lax</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-102"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-103">
      <description>Use xsl:document: schema-aware, validation=strip</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-103"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-104">
      <description>Use xsl:document: schema-aware, validation=preserve</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-104"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-105">
      <description>Use xsl:document: schema-aware, validation by type</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-105"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-106">
      <description>Use xsl:document: schema-aware, validation=strict, no element declaration available</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <modified by="Michael Kay" on="2018-09-24" change="Error code should be XTTE1512 not XTTE1510, but keep the old result as an alternative"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-106"/>
      </test>
      <result>
         <any-of>
            <error code="XTTE1510"/>
            <error code="XTTE1512"/>
         </any-of>
      </result>
   </test-case>
  
  <test-case name="si-document-107">
      <description>Use xsl:document: schema-aware, validation=lax, no element declaration available</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-107"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>

   <test-case name="si-document-108">
      <description>Use xsl:document: schema-aware, validation by type, invalid (wrong namespace)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <modified by="Michael Kay" on="2018-09-24" change="Error code should be XTTE1512 not XTTE1510, but keep the old result as an alternative"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-108"/>
      </test>
      <result>
         <any-of>
            <error code="XTTE1510"/>
            <error code="XTTE1512"/>
         </any-of>
      </result>
   </test-case>
  
  <test-case name="si-document-109">
      <description>Use xsl:document: schema-aware, validation=strict, no element declaration available, caught</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <modified by="Michael Kay" on="2018-09-24" change="Error code should be XTTE1512 not XTTE1510, but keep the old result as an alternative"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-109"/>
      </test>
      <result>
         <any-of>
            <assert>/out = "XTTE1510"</assert>
            <assert>/out = "XTTE1512"</assert>
         </any-of>
      </result>
   </test-case>
  
  <test-case name="si-document-110">
      <description>Use xsl:document: schema-aware, validation by type, invalid, caught</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-110"/>
      </test>
      <result>
         <assert>/out = "XTTE1540"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-111">
      <description>Use xsl:document: schema-aware, validation=strict, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-111"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
  <test-case name="si-document-112">
      <description>Use xsl:document: schema-aware, validation=lax, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-112"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-113">
      <description>Use xsl:document: schema-aware, validation=strip, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-113"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-114">
      <description>Use xsl:document: schema-aware, validation=preserve, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-114"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-115">
      <description>Use xsl:document: schema-aware, validation by type, argument is grounded and consuming</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-115"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-116">
      <description>Use xsl:document: schema-aware, validate attribute by type, success</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-116"/>
      </test>
      <result>
         <assert>/out/in = "2.1"</assert>
      </result>
   </test-case>
   
   <test-case name="si-document-117">
      <description>Use xsl:document: schema-aware, validate attribute by type, failure</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-117"/>
      </test>
      <result>
         <error code="XTTE1540"/>
      </result>
   </test-case>
   
   <test-case name="si-document-121">
      <description>Use xsl:document: schema-aware, validation=strict, element node</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-121"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
   
  <test-case name="si-document-122">
      <description>Use xsl:document: schema-aware, validation=lax, element node</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-122"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-123">
      <description>Use xsl:document: schema-aware, validation=strip, element node</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-123"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-124">
      <description>Use xsl:document: schema-aware, validation=preserve, element node</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-124"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-125">
      <description>Use xsl:document: schema-aware, validation by type, element node</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-125"/>
      </test>
      <result>
         <assert>/out = "true"</assert>
      </result>
   </test-case>
  
  <test-case name="si-document-126">
      <description>Use xsl:document: schema-aware, validation=strict, element node, no element declaration available</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <modified by="Michael Kay" on="2018-09-24" change="Error code should be XTTE1512 not XTTE1510, but keep the old result as an alternative"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-126"/>
      </test>
      <result>
         <any-of>
            <error code="XTTE1510"/>
            <error code="XTTE1512"/>
         </any-of>
      </result>
   </test-case>
  
  <test-case name="si-document-127">
      <description>Use xsl:document: schema-aware, validation=lax, element node, no element declaration available</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-127"/>
      </test>
      <result>
         <assert>/out = "false"</assert>
      </result>
   </test-case>

   <test-case name="si-document-128">
      <description>Use xsl:document: schema-aware, validation by type, element node, invalid (wrong namespace)</description>
      <created by="Michael Kay" on="2014-01-10"/>
      <environment ref="si-document-B"/>
      <dependencies>
        <feature value="schema_aware"/>
      </dependencies>
      <test>
         <initial-template name="d-128"/>
      </test>
      <result>
         <error code="XTTE1540"/>
      </result>
   </test-case>
   
  
   
</test-set>