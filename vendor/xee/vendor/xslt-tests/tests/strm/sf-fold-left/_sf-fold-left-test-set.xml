<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="sf-fold-left">
   <description>fold-left() function with streaming</description>
   
   <environment name="sf-fold-left-A">
     <stylesheet file="sf-fold-left-A.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
      <feature value="higher_order_functions"/>
   </dependencies>
   
   <test-case name="sf-fold-left-003">
      <description>Basic Test of xsl:stream instruction with fold-left()</description>
      <keywords>striding-then-grounded NamedFunctionRef PathExpr fn:data</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-003"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>54.37</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="sf-fold-left-004">
      <description>Test of xsl:stream instruction with fold-left(), filtered with a motionless predicate</description>
      <keywords>striding-then-grounded NamedFunctionRef PathExpr motionless-predicate fn:data</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-004"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>32.95</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="sf-fold-left-005">
      <description>Test of xsl:stream instruction with fold-left(), filtered with a positional predicate</description>
      <keywords>striding-then-grounded PathExpr positional-predicate fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-005"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>16.48</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="sf-fold-left-006">
      <description>Test of xsl:stream instruction with fold-left(), filtered with a positional predicate</description>
      <keywords>striding-then-grounded PathExpr positional-predicate fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-006"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>16.48</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="sf-fold-left-007">
      <description>Test of xsl:stream instruction with fold-left(), filtered with a positional predicate</description>
      <keywords>striding-then-grounded PathExpr positional-predicate fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-007"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>16.48</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-008">
      <description>Test of xsl:stream instruction with fold-left(), filtered with data() to make the predicates motionless</description>
      <keywords>predicate striding-then-grounded PathExpr fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-008"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>2520</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-009">
      <description>Test of xsl:stream instruction with fold-left(), filtered with text() to make the predicates motionless</description>
      <keywords>striding-then-grounded text-nodes childless-nodes PathExpr fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-009"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>2520</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-010">
      <description>Test of xsl:stream instruction with fold-left(), filtered with number() to make the predicates motionless</description>
      <keywords>striding-then-grounded predicate fn:number PathExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-010"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>2520</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-011">
      <description>fold-left() selecting nothing, returning the $zero case</description>
      <keywords>striding-then-grounded PathExpr fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-011"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>42</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-012">
      <description>fold-left() selecting both streamed nodes and literals</description>
      <keywords>ParenthesizedExpr striding-then-grounded fn:number PathExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-012"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>2583</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-013">
      <description>fold-left() selecting both streamed nodes and literals while also filtering</description>
      <keywords>fn:tail striding-then-grounded ParenthesizedExpr fn:number PathExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-013"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>2231</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-015">
      <description>Test of xsl:stream instruction with fold-left() of a computed value</description>
      <keywords>striding-then-grounded LetExpr ForExpr positional-predicate fn:outermost crawling-then-striding PathExpr fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-015"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1604.553</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-016">
      <description>Test of xsl:stream instruction with fold-left() of a computed value</description>
      <keywords>striding-then-grounded MultiplicativeExpr PathExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-016"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>1491746</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-017">
      <description>Test of xsl:stream instruction with fold-left() using copy-of to make it streamable</description>
      <keywords>striding-then-grounded predicate fn:copy-of PathExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-017"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>2520</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-018">
      <description>Test of xsl:stream instruction with fold-left() over attribute values</description>
      <keywords>climbing-then-grounded PathExpr fn:data NamedFunctionRef attribute-axis</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-018"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>745873</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-019">
      <description>Test of xsl:stream instruction with fold-left() over attribute values, filtered</description>
      <keywords>climbing-then-grounded motionless-predicate xs:decimal PathExpr fn:data NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-019"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>840679</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-020">
      <description>fold-left() over attribute values, computed</description>
      <keywords>fn:abs AxisStep attribute-axis climbing-then-grounded PathExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-020"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>935484</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-021">
      <description>fold-left() over values that depend on a condition</description>
      <keywords>IfExpr climbing-then-grounded attribute-axis AxisStep PathExpr xs:date UnaryExpr AdditiveExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-021"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>836308</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-022">
      <description>fold-left() with a loop used to compute each value</description>
      <keywords>xs:NMTOKENS striding-then-grounded xs:decimal PathExpr SimpleMapExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-022"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>112.5</out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sf-fold-left-023">
      <description>fold-left() over a crawling expression</description>
      <keywords>xs:NMTOKENS leading-lone-slash striding-then-grounded xs:decimal PathExpr SimpleMapExpr NamedFunctionRef</keywords>
      <created by="Michael Kay" on="2013-12-10"/>
      <environment ref="sf-fold-left-A"/>
      <test>
         <initial-template name="s-023"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>112.5</out>]]></assert-xml>
      </result>
   </test-case>

</test-set>