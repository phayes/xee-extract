<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="si-next-match">
   <description>xsl:next-match with streaming</description>

   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   <test-case name="si-next-match-067">
      <description>Within a streaming template, use xsl:next-match with tunnel and non-tunnel
         parameters</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-08-13" change="changed test to make it guaranteed streamable"/>
      <test>
         <stylesheet file="si-next-match-067.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <all-of>
            <assert>count(/out/prio5) = 39</assert>
            <assert>every $P in /out/prio5 satisfies ($P/@p="57" and $P/@q="23" and $P/prio4 and
               not($P/prio4[2]))</assert>
            <assert>every $P in /out/prio5/prio4 satisfies ($P/(@p="58" and @q="23" and
               @r="42"))</assert>
            <assert>deep-equal(subsequence(/out/prio5/prio4/data(.), 1, 5), ('Genesis', 'Exodus',
            'Leviticus', 'Numbers', 'Deuteronomy'))</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="si-next-match-108">
      <description>Error case - uses xsl:next-match</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <feature value="schema_aware"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="si-next-match-108.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   

   
</test-set>