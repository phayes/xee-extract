<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="sf-zero-or-one">
   <description>zero-or-one() function with streaming</description>
   
   <environment name="sf-zero-or-one-A">
     <stylesheet file="sf-zero-or-one-A.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   <test-case name="sf-zero-or-one-001">
      <description>Streaming zero-or-one() - grounded operand</description>
      <keywords>striding-then-grounded leading-lone-slash fn:copy-of PathExpr</keywords>
      <created by="Michael Kay" on="2013-12-16"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-001"/>
      </test>
      <result>
         <error code="FORG0003"/>
      </result>
   </test-case>
   
   <test-case name="sf-zero-or-one-002">
      <description>Streaming zero-or-one() - grounded operand</description>
      <keywords>striding-then-grounded predicate fn:copy-of PathExpr</keywords>
      <created by="Michael Kay" on="2013-12-16"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-002"/>
      </test>
      <result>
         <all-of>
           <assert>/out/ITEM[@CAT='MMP']</assert>
           <assert>count(/out/*) = 1</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sf-zero-or-one-003">
      <description>Streaming zero-or-one() - grounded operand</description>
      <keywords>striding-then-grounded predicate fn:copy-of PathExpr</keywords>
      <created by="Michael Kay" on="2013-12-16"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-003"/>
      </test>
      <result>
         <assert>count(/out/*) = 0</assert>
      </result>
   </test-case>
   
   <test-case name="sf-zero-or-one-004">
      <description>Streaming zero-or-one() - striding operand - error case</description>
      <keywords>leading-lone-slash striding cardinality-of-one PathExpr</keywords>
      <created by="Michael Kay" on="2013-12-16"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-004"/>
      </test>
      <result>
         <error code="FORG0003"/>
      </result>
   </test-case>
   
   <test-case name="sf-zero-or-one-005">
      <description>Streaming zero-or-one() - striding operand</description>
      <keywords>leading-lone-slash striding cardinality-of-one PathExpr motionless-predicate</keywords>
      <created by="Michael Kay" on="2013-12-16"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-005"/>
      </test>
      <result>
         <all-of>
           <assert>/out/ITEM[@CAT='H']</assert>
           <assert>count(/out/*) = 1</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sf-zero-or-one-006">
      <description>Streaming zero-or-one() - striding operand</description>
      <keywords>leading-lone-slash cardinality-of-one PathExpr motionless-predicate empty-sequence</keywords>
      <created by="Michael Kay" on="2013-12-16"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-006"/>
      </test>
      <result>
         <assert>count(/out/*) = 0</assert>
      </result>
   </test-case>
   
   <test-case name="sf-zero-or-one-007">
      <description>Streaming zero-or-one() - striding operand - error case, error is caught</description>
      <keywords>FORG0003 striding-then-grounded leading-lone-slash fn:copy-of xsl:try error-handling specific-catch-clause PathExpr</keywords>
      <created by="Michael Kay" on="2014-01-06"/>
      <environment ref="sf-zero-or-one-A"/>
      <test>
         <initial-template name="r-007"/>
      </test>
      <result>
         <assert>/out = 'caught'</assert>
      </result>
   </test-case>
      


</test-set>