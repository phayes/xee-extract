<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="seqtor">
   <description>Tests constructing content in sequence constructors</description>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <!-- Note, for most of these tests the only 3.0 dependency is the use of name="xsl:initial-template" -->
   </dependencies>
   
   <test-case name="seqtor-001">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-001.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>|||</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-002">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-002.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>1|2|3|4</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-003">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-003.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>1|2|3|4|</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-004">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-004.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>1|2|3|4|</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-005">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-005.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>1|2|3</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-006">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-006.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>1|2|3|4|</assert-string-value>
      </result>
   </test-case>
      
   <test-case name="seqtor-007">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-007.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>1 2 | 3 4 |</assert-string-value>
      </result>
   </test-case>
      
   <test-case name="seqtor-008">
      <description>Constructing sequence constructor</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-008.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>12|34|</assert-string-value>
      </result>
   </test-case>
      
   <test-case name="seqtor-009">
      <description>Constructing sequence constructor with expand-text, should behave same as without</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-009.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --12|34|-- END --</assert-string-value>
      </result>
   </test-case>
      
   <test-case name="seqtor-010">
      <description>Constructing sequence constructor, xsl:sequence at before/end of xsl:for-each and a tricky atomics concat</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-010.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --1 2| 3 4|-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-011">
      <description>Constructing sequence constructor, xsl:text at before/end of xsl:for-each and a tricky atomics concat</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-011.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --| 1  2 || 3  4 |-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-012">
      <description>Constructing sequence constructor, mode complex test with spacing</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-012.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --1 - 2 {3} 4 - 5 {6} 7 - 8 {9} 10 - 11 {12} 13 - 14 {15} 16 - 17 {18} 19 - 20 {21} 22 - 23 {24} 25 - 26 {27} 28 - 29 {30} 31 - 32 {33} 34 - 35 {36} 37 - 38 {39} 40 - 41 {42} 43 - 44 {45} 46 - 47 {48} 49 - 50 {51} 52 - 53 {54} 55 - 56 {57} 58 - 59 {60} 61 - 62 {63} 64 - 65 {66} 67 - 68 {69} 70 - 71 {72} 73 - 74 {75} 76 - 77 {78} 79 - 80 {81} 82 - 83 {84} 85 - 86 {87} 88 - 89 {90} 91 - 92 {93} 94 - 95 {96} 97 - 98 {99} 100 -- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-013">
      <description>Constructing sequence constructor, test same as seqtor-013, but intertwined with text node, removing the spaces</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-013.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --1-2{3}4-5{6}7-8{9}10-11{12}13-14{15}16-17{18}19-20{21}22-23{24}25-26{27}28-29{30}31-32{33}34-35{36}37-38{39}40-41{42}43-44{45}46-47{48}49-50{51}52-53{54}55-56{57}58-59{60}61-62{63}64-65{66}67-68{69}70-71{72}73-74{75}76-77{78}79-80{81}82-83{84}85-86{87}88-89{90}91-92{93}94-95{96}97-98{99}100-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-014">
      <description>Constructing sequence constructor, test same as seqtor-013, without the dashes and nicer space-folding</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-014.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --12 {3} 45 {6} 78 {9} 1011 {12} 1314 {15} 1617 {18} 1920 {21} 2223 {24} 2526 {27} 2829 {30} 3132 {33} 3435 {36} 3738 {39} 4041 {42} 4344 {45} 4647 {48} 4950 {51} 5253 {54} 5556 {57} 5859 {60} 6162 {63} 6465 {66} 6768 {69} 7071 {72} 7374 {75} 7677 {78} 7980 {81} 8283 {84} 8586 {87} 8889 {90} 9192 {93} 9495 {96} 9798 {99} 100-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-015">
      <description>Constructing sequence constructor, test same as seqtor-014, using xsl:value-of instead of xsl:text, but with expand-text</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-015.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --12 {3} 45 {6} 78 {9} 1011 {12} 1314 {15} 1617 {18} 1920 {21} 2223 {24} 2526 {27} 2829 {30} 3132 {33} 3435 {36} 3738 {39} 4041 {42} 4344 {45} 4647 {48} 4950 {51} 5253 {54} 5556 {57} 5859 {60} 6162 {63} 6465 {66} 6768 {69} 7071 {72} 7374 {75} 7677 {78} 7980 {81} 8283 {84} 8586 {87} 8889 {90} 9192 {93} 9495 {96} 9798 {99} 100-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-016">
      <description>Constructing sequence constructor, test same as seqtor-014, using xsl:sequence instead of xsl:text, but with expand-text to create a text node</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-016.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --12 {3} 45 {6} 78 {9} 1011 {12} 1314 {15} 1617 {18} 1920 {21} 2223 {24} 2526 {27} 2829 {30} 3132 {33} 3435 {36} 3738 {39} 4041 {42} 4344 {45} 4647 {48} 4950 {51} 5253 {54} 5556 {57} 5859 {60} 6162 {63} 6465 {66} 6768 {69} 7071 {72} 7374 {75} 7677 {78} 7980 {81} 8283 {84} 8586 {87} 8889 {90} 9192 {93} 9495 {96} 9798 {99} 100-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-017">
      <description>Constructing sequence constructor, test same as seqtor-014, using xsl:document instead of xsl:text, but with expand-text to create a text node inside a document node</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-017.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START --12 {3} 45 {6} 78 {9} 1011 {12} 1314 {15} 1617 {18} 1920 {21} 2223 {24} 2526 {27} 2829 {30} 3132 {33} 3435 {36} 3738 {39} 4041 {42} 4344 {45} 4647 {48} 4950 {51} 5253 {54} 5556 {57} 5859 {60} 6162 {63} 6465 {66} 6768 {69} 7071 {72} 7374 {75} 7677 {78} 7980 {81} 8283 {84} 8586 {87} 8889 {90} 9192 {93} 9495 {96} 9798 {99} 100-- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-018">
      <description>Constructing sequence constructor, the reverse of seqtor-016, creating atomics where we created text nodes earlier</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-018.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-- START -- 1   2 {   3   } 4   5 {   6   } 7   8 {   9   } 10   11 {   12   } 13   14 {   15   } 16   17 {   18   } 19   20 {   21   } 22   23 {   24   } 25   26 {   27   } 28   29 {   30   } 31   32 {   33   } 34   35 {   36   } 37   38 {   39   } 40   41 {   42   } 43   44 {   45   } 46   47 {   48   } 49   50 {   51   } 52   53 {   54   } 55   56 {   57   } 58   59 {   60   } 61   62 {   63   } 64   65 {   66   } 67   68 {   69   } 70   71 {   72   } 73   74 {   75   } 76   77 {   78   } 79   80 {   81   } 82   83 {   84   } 85   86 {   87   } 88   89 {   90   } 91   92 {   93   } 94   95 {   96   } 97   98 {   99   } 100 -- END --</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-019">
      <description>Constructing sequence constructor, nesting xsl:sequence and xsl:text and expand-text</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-019.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>before-after</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-020">
      <description>Constructing sequence constructor, creating nothingness</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-020.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>-               -</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-021">
      <description>Constructing sequence constructor, creating (real) nothingness, variant of previous</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-021.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>--</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-022">
      <description>Constructing sequence constructor, creating (real) nothingness, variant of previous (expand-text)</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-022.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>--</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-023">
      <description>Constructing sequence constructor, creating (real) nothingness, variant of previous (expand-text)</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-023.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>--</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-024">
      <description>Constructing sequence constructor, yet another way of getting (almost) nothing, this time with xsl:function</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-024.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>- -</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-025">
      <description>Constructing sequence constructor, yet another way of getting (almost) nothing, this time with xsl:function, variant</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-025.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>--</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-026">
      <description>Constructing sequence constructor, yet another way of getting (almost) nothing, this time with xsl:function, variant</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-026.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>--</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-027">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Abel Braaksma" on="2016-02-17" change="Fix leading space 29458" />
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-027.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>startend A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | }~</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-028">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Abel Braaksma" on="2016-02-17" change="Fix leading space 29458" />
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-028.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>startend A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | }~</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-029">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-029.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>startendABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-030">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-030.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>start endABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-031">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function, note the space after the tilde at the end!</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-031.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>start end  A   B   C   D   E   F   G   H   I   J   K   L   M   N   O   P   Q   R   S   T   U   V   W   X   Y   Z   [   \   ]   ^   _   `   a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y   z   {   |   }   ~ </assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-032">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function, note the space between "start" and "end"</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-032.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>start endA|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|[|\|]|^|_|`|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|{|||}|~</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-033">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function, note the incidental wrong recursion</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-033.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>start ~ } | { z y x w v u t s r q p o n m l k j i h g f e d c b a ` _ ^ ] \ [ Z Y X W V U T S R Q P O N M L K J I H G F E D C B A end|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-034">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function, note the incidental wrong recursion, variant, subtly different from seqtor-033</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-034.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>start~ } | { z y x w v u t s r q p o n m l k j i h g f e d c b a ` _ ^ ] \ [ Z Y X W V U T S R Q P O N M L K J I H G F E D C B A end|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-035">
      <description>Constructing sequence constructor, convoluted example of deeply nesting, non-tail-recursive function, note the incidental wrong recursion, variant, quite subtly different from seqtor-033/-34</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-035.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-string-value>start~}|{zyxwvutsrqponmlkjihgfedcba`_^]\[ZYXWVUTSRQPONMLKJIHGFEDCBAend|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="seqtor-036a">
      <description>Constructing simple content, xsl:comment</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-036a.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!--  |   |  -->]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-036b">
      <description>Constructing simple content, xsl:comment</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-036b.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!--||-->]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-036c">
      <description>Constructing simple content, xsl:comment</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-036c.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!-- | | -->]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-036d">
      <description>Constructing simple content, xsl:comment</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-036d.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!-- |  | -->]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="seqtor-036e">
      <description>Constructing simple content, xsl:comment</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-036e.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!--||-->]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-037a">
      <description>Constructing simple content, xsl:processing-instruction</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-037a.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<?foo |   |  ?>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-037b">
      <description>Constructing simple content, xsl:processing-instruction</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-037b.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<?foo ||?>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-037c">
      <description>Constructing simple content, xsl:processing-instruction</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-037c.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<?foo | | ?>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-037d">
      <description>Constructing simple content, xsl:processing-instruction</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-037d.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<?foo |  | ?>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="seqtor-037e">
      <description>Constructing simple content, xsl:processing-instruction</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-037e.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<?foo ||?>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-038a">
      <description>Constructing simple content, xsl:namespace</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2019-11-30" change="Allow error result, a processor can reject an invalid namespace URI"/>
      <test>
         <stylesheet file="seqtor-038a.xsl"/>
      </test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<bar xmlns:foo="  |   |  "/>]]></assert-xml>
            <error code="XTDE0905"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="seqtor-038b">
      <description>Constructing simple content, xsl:namespace</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-038b.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar xmlns:foo="||"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-038c">
      <description>Constructing simple content, xsl:namespace</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2019-11-30" change="Allow error result, a processor can reject an invalid namespace URI"/>
      <test>
         <stylesheet file="seqtor-038c.xsl"/>
      </test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<bar xmlns:foo=" | | "/>]]></assert-xml>
            <error code="XTDE0905"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="seqtor-038d">
      <description>Constructing simple content, xsl:namespace</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2019-11-30" change="Allow error result, a processor can reject an invalid namespace URI"/>
     <modified by="Michael Kay" on="2020-02-18" change="Change expected result: see explanation added to the stylesheet"/>
     <test>
         <stylesheet file="seqtor-038d.xsl"/>
      </test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<bar xmlns:foo=" |  | "/>]]></assert-xml>
            <error code="XTDE0905"/>
         </any-of>
      </result>
   </test-case>
   
   <test-case name="seqtor-038e">
      <description>Constructing simple content, xsl:namespace</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-038e.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar xmlns:foo="||"/>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="seqtor-039a">
      <description>Constructing simple content, xsl:attribute, different default separator, bug 29445</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-039a.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar foo=" | | "/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-039b">
      <description>Constructing simple content, xsl:attribute</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-039b.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar foo="||"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-039c">
      <description>Constructing simple content, xsl:attribute</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-039c.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar foo=" | | "/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-039d">
      <description>Constructing simple content, xsl:attribute, note different default separator, bug 29445</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-039d.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar foo="||"/>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="seqtor-039e">
      <description>Constructing simple content, xsl:attribute</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-039e.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar foo="||"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-040a">
      <description>Constructing simple content, xsl:text/value-of, different default separator, bug 29445</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-040a.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar> | | </bar>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-040b">
      <description>Constructing simple content, xsl:text/value-of</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-040b.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar>||</bar>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-040c">
      <description>Constructing simple content, xsl:text/value-of</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-040c.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar> | | </bar>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-040d">
      <description>Constructing simple content, xsl:text/value-of, different default separator, bug 29445</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-040d.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar>||</bar>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="seqtor-040e">
      <description>Constructing simple content, xsl:text/value-of</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-040e.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<bar>||</bar>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="seqtor-041">
      <description>Constructing simple content, multiple empty text nodes in variable</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-041.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<result><count>3</count><text/></result>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-042">
      <description>Constructing simple content, multiple text nodes in variable are merged</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <test>
         <stylesheet file="seqtor-042.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<result><count>3</count><text>non-empty and more</text></result>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="seqtor-043a">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043a.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[<result>42 84 126 168 210 252 294 336 378 420</result>]]></assert-xml>
            <assert-string-value><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043b">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <modified by="Michael Kay" on="2019-11-29" change="avoid assert-xml on non-XML results"/>
      <modified by="Michael Kay" on="2020-01-15" change="correct expected results (xsl:variable without @select creates a document node)"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043b.xsl"/>
         <!--<output well-formed="no"/>-->
      </test>
      <result>
         <all-of>
            <assert-type>document-node()</assert-type>
            <assert-eq>"42 84 126 168 210 252 294 336 378 420"</assert-eq>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043c">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043c.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-xml>
            <assert-string-value><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043d">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043d.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[4284126168210252294336378420]]></assert-xml>
            <assert-string-value><![CDATA[4284126168210252294336378420]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043e">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043e.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-xml>
            <assert-string-value><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043f">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043f.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-xml>
            <assert-string-value><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043g">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043g.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-xml>
            <assert-string-value><![CDATA[42 84 126 168 210 252 294 336 378 420]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043h">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043h.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[  42 84 126 168 210 252 294 336 378 420  ]]></assert-xml>
            <assert-string-value><![CDATA[  42 84 126 168 210 252 294 336 378 420  ]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-043i">
      <description>Result tree from a more complex expression, originally from:
      https://lists.w3.org/Archives/Public/public-xsl-query/2016Feb/0034.html</description>
      <created by="Abel Braaksma" on="2016-01-23"/>
      <modified by="Michael Kay" on="2016-03-24" change="add dependencies"/>
      <dependencies>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="seqtor-043i.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <all-of>
            <assert-xml><![CDATA[ 42   84   126   168   210   252   294   336   378   420 ]]></assert-xml>
            <assert-string-value><![CDATA[ 42   84   126   168   210   252   294   336   378   420 ]]></assert-string-value>
         </all-of>
      </result>
   </test-case>

   <test-case name="seqtor-101">
      <description>Test xsl:on-empty with strings and empty comments</description>
      <created by="Charles Foster" on="2016-03-11"/>
      <modified by="Michael Kay" on="2017-02-28" change="add well-formed=no"/>
      <test>
         <stylesheet file="seqtor-101.xsl"/>
         <output well-formed="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!---->]]></assert-xml>
      </result>
   </test-case>


</test-set>