<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog" name="xp-striding-grounded-consumingA">
   <description>
                    CP: Striding, RP: Grounded, RS: Consuming
                    Attribute or namespace axis on child or descendant(-or-self) axis that is not in U{element}} is grounded (selects nothing) and remains consuming
                </description>
   <dependencies>
      <sweep_and_posture satisfied="true" value="supports-sweep-and-posture-assessments"/>
   </dependencies>
   <test-case name="xp-striding-grounded-consumingA001">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">comment()/attribute()</xpath>
            <xpath part="2">comment()/attribute::foo</xpath>
            <xpath part="3">comment()/attribute::ex:foo</xpath>
            <xpath part="4">comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">comment()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">comment()/attribute::*:foo</xpath>
            <xpath part="7">comment()/attribute::ex:*</xpath>
            <xpath part="8">comment()/attribute::*</xpath>
            <xpath part="9">comment()/attribute::node()</xpath>
            <xpath part="10">comment()/attribute::attribute()</xpath>
            <xpath part="11">comment()/attribute::attribute(*)</xpath>
            <xpath part="12">comment()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">comment()/@foo</xpath>
            <xpath part="15">comment()/@ex:foo</xpath>
            <xpath part="16">comment()/@Q{http://example.com}foo</xpath>
            <xpath part="17">comment()/@Q{http://example.com}*</xpath>
            <xpath part="18">comment()/@*:foo</xpath>
            <xpath part="19">comment()/@ex:*</xpath>
            <xpath part="20">comment()/@*</xpath>
            <xpath part="21">comment()/@node()</xpath>
            <xpath part="22">comment()/@attribute()</xpath>
            <xpath part="23">comment()/@attribute(*)</xpath>
            <xpath part="24">comment()/@attribute(ex:foo)</xpath>
            <xpath part="25">comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">comment()/namespace-node()</xpath>
            <xpath part="27">comment()/namespace::namespace-node()</xpath>
            <xpath part="28">comment()/namespace::foo</xpath>
            <xpath part="29">comment()/namespace::Q{}foo</xpath>
            <xpath part="30">comment()/namespace::Q{}*</xpath>
            <xpath part="31">comment()/namespace::*:foo</xpath>
            <xpath part="32">comment()/namespace::*</xpath>
            <xpath part="33">comment()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA002">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">child::comment()/attribute()</xpath>
            <xpath part="2">child::comment()/attribute::foo</xpath>
            <xpath part="3">child::comment()/attribute::ex:foo</xpath>
            <xpath part="4">child::comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">child::comment()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">child::comment()/attribute::*:foo</xpath>
            <xpath part="7">child::comment()/attribute::ex:*</xpath>
            <xpath part="8">child::comment()/attribute::*</xpath>
            <xpath part="9">child::comment()/attribute::node()</xpath>
            <xpath part="10">child::comment()/attribute::attribute()</xpath>
            <xpath part="11">child::comment()/attribute::attribute(*)</xpath>
            <xpath part="12">child::comment()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">child::comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">child::comment()/@foo</xpath>
            <xpath part="15">child::comment()/@ex:foo</xpath>
            <xpath part="16">child::comment()/@Q{http://example.com}foo</xpath>
            <xpath part="17">child::comment()/@Q{http://example.com}*</xpath>
            <xpath part="18">child::comment()/@*:foo</xpath>
            <xpath part="19">child::comment()/@ex:*</xpath>
            <xpath part="20">child::comment()/@*</xpath>
            <xpath part="21">child::comment()/@node()</xpath>
            <xpath part="22">child::comment()/@attribute()</xpath>
            <xpath part="23">child::comment()/@attribute(*)</xpath>
            <xpath part="24">child::comment()/@attribute(ex:foo)</xpath>
            <xpath part="25">child::comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">child::comment()/namespace-node()</xpath>
            <xpath part="27">child::comment()/namespace::namespace-node()</xpath>
            <xpath part="28">child::comment()/namespace::foo</xpath>
            <xpath part="29">child::comment()/namespace::Q{}foo</xpath>
            <xpath part="30">child::comment()/namespace::Q{}*</xpath>
            <xpath part="31">child::comment()/namespace::*:foo</xpath>
            <xpath part="32">child::comment()/namespace::*</xpath>
            <xpath part="33">child::comment()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA003">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">processing-instruction()/attribute()</xpath>
            <xpath part="2">processing-instruction()/attribute::foo</xpath>
            <xpath part="3">processing-instruction()/attribute::ex:foo</xpath>
            <xpath part="4">processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">processing-instruction()/attribute::*:foo</xpath>
            <xpath part="7">processing-instruction()/attribute::ex:*</xpath>
            <xpath part="8">processing-instruction()/attribute::*</xpath>
            <xpath part="9">processing-instruction()/attribute::node()</xpath>
            <xpath part="10">processing-instruction()/attribute::attribute()</xpath>
            <xpath part="11">processing-instruction()/attribute::attribute(*)</xpath>
            <xpath part="12">processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">processing-instruction()/@foo</xpath>
            <xpath part="15">processing-instruction()/@ex:foo</xpath>
            <xpath part="16">processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath part="17">processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath part="18">processing-instruction()/@*:foo</xpath>
            <xpath part="19">processing-instruction()/@ex:*</xpath>
            <xpath part="20">processing-instruction()/@*</xpath>
            <xpath part="21">processing-instruction()/@node()</xpath>
            <xpath part="22">processing-instruction()/@attribute()</xpath>
            <xpath part="23">processing-instruction()/@attribute(*)</xpath>
            <xpath part="24">processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath part="25">processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">processing-instruction()/namespace-node()</xpath>
            <xpath part="27">processing-instruction()/namespace::namespace-node()</xpath>
            <xpath part="28">processing-instruction()/namespace::foo</xpath>
            <xpath part="29">processing-instruction()/namespace::Q{}foo</xpath>
            <xpath part="30">processing-instruction()/namespace::Q{}*</xpath>
            <xpath part="31">processing-instruction()/namespace::*:foo</xpath>
            <xpath part="32">processing-instruction()/namespace::*</xpath>
            <xpath part="33">processing-instruction()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA004">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">child::processing-instruction()/attribute()</xpath>
            <xpath part="2">child::processing-instruction()/attribute::foo</xpath>
            <xpath part="3">child::processing-instruction()/attribute::ex:foo</xpath>
            <xpath part="4">child::processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">child::processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">child::processing-instruction()/attribute::*:foo</xpath>
            <xpath part="7">child::processing-instruction()/attribute::ex:*</xpath>
            <xpath part="8">child::processing-instruction()/attribute::*</xpath>
            <xpath part="9">child::processing-instruction()/attribute::node()</xpath>
            <xpath part="10">child::processing-instruction()/attribute::attribute()</xpath>
            <xpath part="11">child::processing-instruction()/attribute::attribute(*)</xpath>
            <xpath part="12">child::processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">child::processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">child::processing-instruction()/@foo</xpath>
            <xpath part="15">child::processing-instruction()/@ex:foo</xpath>
            <xpath part="16">child::processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath part="17">child::processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath part="18">child::processing-instruction()/@*:foo</xpath>
            <xpath part="19">child::processing-instruction()/@ex:*</xpath>
            <xpath part="20">child::processing-instruction()/@*</xpath>
            <xpath part="21">child::processing-instruction()/@node()</xpath>
            <xpath part="22">child::processing-instruction()/@attribute()</xpath>
            <xpath part="23">child::processing-instruction()/@attribute(*)</xpath>
            <xpath part="24">child::processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath part="25">child::processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">child::processing-instruction()/namespace-node()</xpath>
            <xpath part="27">child::processing-instruction()/namespace::namespace-node()</xpath>
            <xpath part="28">child::processing-instruction()/namespace::foo</xpath>
            <xpath part="29">child::processing-instruction()/namespace::Q{}foo</xpath>
            <xpath part="30">child::processing-instruction()/namespace::Q{}*</xpath>
            <xpath part="31">child::processing-instruction()/namespace::*:foo</xpath>
            <xpath part="32">child::processing-instruction()/namespace::*</xpath>
            <xpath part="33">child::processing-instruction()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA005">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::processing-instruction(xml-stylesheet)
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">child::processing-instruction(xml-stylesheet)/attribute()</xpath>
            <xpath part="2">child::processing-instruction(xml-stylesheet)/attribute::foo</xpath>
            <xpath part="3">child::processing-instruction(xml-stylesheet)/attribute::ex:foo</xpath>
            <xpath part="4">child::processing-instruction(xml-stylesheet)/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">child::processing-instruction(xml-stylesheet)/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">child::processing-instruction(xml-stylesheet)/attribute::*:foo</xpath>
            <xpath part="7">child::processing-instruction(xml-stylesheet)/attribute::ex:*</xpath>
            <xpath part="8">child::processing-instruction(xml-stylesheet)/attribute::*</xpath>
            <xpath part="9">child::processing-instruction(xml-stylesheet)/attribute::node()</xpath>
            <xpath part="10">child::processing-instruction(xml-stylesheet)/attribute::attribute()</xpath>
            <xpath part="11">child::processing-instruction(xml-stylesheet)/attribute::attribute(*)</xpath>
            <xpath part="12">child::processing-instruction(xml-stylesheet)/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">child::processing-instruction(xml-stylesheet)/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">child::processing-instruction(xml-stylesheet)/@foo</xpath>
            <xpath part="15">child::processing-instruction(xml-stylesheet)/@ex:foo</xpath>
            <xpath part="16">child::processing-instruction(xml-stylesheet)/@Q{http://example.com}foo</xpath>
            <xpath part="17">child::processing-instruction(xml-stylesheet)/@Q{http://example.com}*</xpath>
            <xpath part="18">child::processing-instruction(xml-stylesheet)/@*:foo</xpath>
            <xpath part="19">child::processing-instruction(xml-stylesheet)/@ex:*</xpath>
            <xpath part="20">child::processing-instruction(xml-stylesheet)/@*</xpath>
            <xpath part="21">child::processing-instruction(xml-stylesheet)/@node()</xpath>
            <xpath part="22">child::processing-instruction(xml-stylesheet)/@attribute()</xpath>
            <xpath part="23">child::processing-instruction(xml-stylesheet)/@attribute(*)</xpath>
            <xpath part="24">child::processing-instruction(xml-stylesheet)/@attribute(ex:foo)</xpath>
            <xpath part="25">child::processing-instruction(xml-stylesheet)/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">child::processing-instruction(xml-stylesheet)/namespace-node()</xpath>
            <xpath part="27">child::processing-instruction(xml-stylesheet)/namespace::namespace-node()</xpath>
            <xpath part="28">child::processing-instruction(xml-stylesheet)/namespace::foo</xpath>
            <xpath part="29">child::processing-instruction(xml-stylesheet)/namespace::Q{}foo</xpath>
            <xpath part="30">child::processing-instruction(xml-stylesheet)/namespace::Q{}*</xpath>
            <xpath part="31">child::processing-instruction(xml-stylesheet)/namespace::*:foo</xpath>
            <xpath part="32">child::processing-instruction(xml-stylesheet)/namespace::*</xpath>
            <xpath part="33">child::processing-instruction(xml-stylesheet)/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA006">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::processing-instruction('xml-stylesheet')
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">child::processing-instruction('xml-stylesheet')/attribute()</xpath>
            <xpath part="2">child::processing-instruction('xml-stylesheet')/attribute::foo</xpath>
            <xpath part="3">child::processing-instruction('xml-stylesheet')/attribute::ex:foo</xpath>
            <xpath part="4">child::processing-instruction('xml-stylesheet')/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">child::processing-instruction('xml-stylesheet')/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">child::processing-instruction('xml-stylesheet')/attribute::*:foo</xpath>
            <xpath part="7">child::processing-instruction('xml-stylesheet')/attribute::ex:*</xpath>
            <xpath part="8">child::processing-instruction('xml-stylesheet')/attribute::*</xpath>
            <xpath part="9">child::processing-instruction('xml-stylesheet')/attribute::node()</xpath>
            <xpath part="10">child::processing-instruction('xml-stylesheet')/attribute::attribute()</xpath>
            <xpath part="11">child::processing-instruction('xml-stylesheet')/attribute::attribute(*)</xpath>
            <xpath part="12">child::processing-instruction('xml-stylesheet')/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">child::processing-instruction('xml-stylesheet')/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">child::processing-instruction('xml-stylesheet')/@foo</xpath>
            <xpath part="15">child::processing-instruction('xml-stylesheet')/@ex:foo</xpath>
            <xpath part="16">child::processing-instruction('xml-stylesheet')/@Q{http://example.com}foo</xpath>
            <xpath part="17">child::processing-instruction('xml-stylesheet')/@Q{http://example.com}*</xpath>
            <xpath part="18">child::processing-instruction('xml-stylesheet')/@*:foo</xpath>
            <xpath part="19">child::processing-instruction('xml-stylesheet')/@ex:*</xpath>
            <xpath part="20">child::processing-instruction('xml-stylesheet')/@*</xpath>
            <xpath part="21">child::processing-instruction('xml-stylesheet')/@node()</xpath>
            <xpath part="22">child::processing-instruction('xml-stylesheet')/@attribute()</xpath>
            <xpath part="23">child::processing-instruction('xml-stylesheet')/@attribute(*)</xpath>
            <xpath part="24">child::processing-instruction('xml-stylesheet')/@attribute(ex:foo)</xpath>
            <xpath part="25">child::processing-instruction('xml-stylesheet')/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">child::processing-instruction('xml-stylesheet')/namespace-node()</xpath>
            <xpath part="27">child::processing-instruction('xml-stylesheet')/namespace::namespace-node()</xpath>
            <xpath part="28">child::processing-instruction('xml-stylesheet')/namespace::foo</xpath>
            <xpath part="29">child::processing-instruction('xml-stylesheet')/namespace::Q{}foo</xpath>
            <xpath part="30">child::processing-instruction('xml-stylesheet')/namespace::Q{}*</xpath>
            <xpath part="31">child::processing-instruction('xml-stylesheet')/namespace::*:foo</xpath>
            <xpath part="32">child::processing-instruction('xml-stylesheet')/namespace::*</xpath>
            <xpath part="33">child::processing-instruction('xml-stylesheet')/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA007">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">text()/attribute()</xpath>
            <xpath part="2">text()/attribute::foo</xpath>
            <xpath part="3">text()/attribute::ex:foo</xpath>
            <xpath part="4">text()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">text()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">text()/attribute::*:foo</xpath>
            <xpath part="7">text()/attribute::ex:*</xpath>
            <xpath part="8">text()/attribute::*</xpath>
            <xpath part="9">text()/attribute::node()</xpath>
            <xpath part="10">text()/attribute::attribute()</xpath>
            <xpath part="11">text()/attribute::attribute(*)</xpath>
            <xpath part="12">text()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">text()/@foo</xpath>
            <xpath part="15">text()/@ex:foo</xpath>
            <xpath part="16">text()/@Q{http://example.com}foo</xpath>
            <xpath part="17">text()/@Q{http://example.com}*</xpath>
            <xpath part="18">text()/@*:foo</xpath>
            <xpath part="19">text()/@ex:*</xpath>
            <xpath part="20">text()/@*</xpath>
            <xpath part="21">text()/@node()</xpath>
            <xpath part="22">text()/@attribute()</xpath>
            <xpath part="23">text()/@attribute(*)</xpath>
            <xpath part="24">text()/@attribute(ex:foo)</xpath>
            <xpath part="25">text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">text()/namespace-node()</xpath>
            <xpath part="27">text()/namespace::namespace-node()</xpath>
            <xpath part="28">text()/namespace::foo</xpath>
            <xpath part="29">text()/namespace::Q{}foo</xpath>
            <xpath part="30">text()/namespace::Q{}*</xpath>
            <xpath part="31">text()/namespace::*:foo</xpath>
            <xpath part="32">text()/namespace::*</xpath>
            <xpath part="33">text()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA008">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: child::text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">child::text()/attribute()</xpath>
            <xpath part="2">child::text()/attribute::foo</xpath>
            <xpath part="3">child::text()/attribute::ex:foo</xpath>
            <xpath part="4">child::text()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">child::text()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">child::text()/attribute::*:foo</xpath>
            <xpath part="7">child::text()/attribute::ex:*</xpath>
            <xpath part="8">child::text()/attribute::*</xpath>
            <xpath part="9">child::text()/attribute::node()</xpath>
            <xpath part="10">child::text()/attribute::attribute()</xpath>
            <xpath part="11">child::text()/attribute::attribute(*)</xpath>
            <xpath part="12">child::text()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">child::text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">child::text()/@foo</xpath>
            <xpath part="15">child::text()/@ex:foo</xpath>
            <xpath part="16">child::text()/@Q{http://example.com}foo</xpath>
            <xpath part="17">child::text()/@Q{http://example.com}*</xpath>
            <xpath part="18">child::text()/@*:foo</xpath>
            <xpath part="19">child::text()/@ex:*</xpath>
            <xpath part="20">child::text()/@*</xpath>
            <xpath part="21">child::text()/@node()</xpath>
            <xpath part="22">child::text()/@attribute()</xpath>
            <xpath part="23">child::text()/@attribute(*)</xpath>
            <xpath part="24">child::text()/@attribute(ex:foo)</xpath>
            <xpath part="25">child::text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">child::text()/namespace-node()</xpath>
            <xpath part="27">child::text()/namespace::namespace-node()</xpath>
            <xpath part="28">child::text()/namespace::foo</xpath>
            <xpath part="29">child::text()/namespace::Q{}foo</xpath>
            <xpath part="30">child::text()/namespace::Q{}*</xpath>
            <xpath part="31">child::text()/namespace::*:foo</xpath>
            <xpath part="32">child::text()/namespace::*</xpath>
            <xpath part="33">child::text()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA009">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant::comment()/attribute()</xpath>
            <xpath part="2">descendant::comment()/attribute::foo</xpath>
            <xpath part="3">descendant::comment()/attribute::ex:foo</xpath>
            <xpath part="4">descendant::comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant::comment()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant::comment()/attribute::*:foo</xpath>
            <xpath part="7">descendant::comment()/attribute::ex:*</xpath>
            <xpath part="8">descendant::comment()/attribute::*</xpath>
            <xpath part="9">descendant::comment()/attribute::node()</xpath>
            <xpath part="10">descendant::comment()/attribute::attribute()</xpath>
            <xpath part="11">descendant::comment()/attribute::attribute(*)</xpath>
            <xpath part="12">descendant::comment()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant::comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant::comment()/@foo</xpath>
            <xpath part="15">descendant::comment()/@ex:foo</xpath>
            <xpath part="16">descendant::comment()/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant::comment()/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant::comment()/@*:foo</xpath>
            <xpath part="19">descendant::comment()/@ex:*</xpath>
            <xpath part="20">descendant::comment()/@*</xpath>
            <xpath part="21">descendant::comment()/@node()</xpath>
            <xpath part="22">descendant::comment()/@attribute()</xpath>
            <xpath part="23">descendant::comment()/@attribute(*)</xpath>
            <xpath part="24">descendant::comment()/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant::comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant::comment()/namespace-node()</xpath>
            <xpath part="27">descendant::comment()/namespace::namespace-node()</xpath>
            <xpath part="28">descendant::comment()/namespace::foo</xpath>
            <xpath part="29">descendant::comment()/namespace::Q{}foo</xpath>
            <xpath part="30">descendant::comment()/namespace::Q{}*</xpath>
            <xpath part="31">descendant::comment()/namespace::*:foo</xpath>
            <xpath part="32">descendant::comment()/namespace::*</xpath>
            <xpath part="33">descendant::comment()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA010">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant::processing-instruction()/attribute()</xpath>
            <xpath part="2">descendant::processing-instruction()/attribute::foo</xpath>
            <xpath part="3">descendant::processing-instruction()/attribute::ex:foo</xpath>
            <xpath part="4">descendant::processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant::processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant::processing-instruction()/attribute::*:foo</xpath>
            <xpath part="7">descendant::processing-instruction()/attribute::ex:*</xpath>
            <xpath part="8">descendant::processing-instruction()/attribute::*</xpath>
            <xpath part="9">descendant::processing-instruction()/attribute::node()</xpath>
            <xpath part="10">descendant::processing-instruction()/attribute::attribute()</xpath>
            <xpath part="11">descendant::processing-instruction()/attribute::attribute(*)</xpath>
            <xpath part="12">descendant::processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant::processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant::processing-instruction()/@foo</xpath>
            <xpath part="15">descendant::processing-instruction()/@ex:foo</xpath>
            <xpath part="16">descendant::processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant::processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant::processing-instruction()/@*:foo</xpath>
            <xpath part="19">descendant::processing-instruction()/@ex:*</xpath>
            <xpath part="20">descendant::processing-instruction()/@*</xpath>
            <xpath part="21">descendant::processing-instruction()/@node()</xpath>
            <xpath part="22">descendant::processing-instruction()/@attribute()</xpath>
            <xpath part="23">descendant::processing-instruction()/@attribute(*)</xpath>
            <xpath part="24">descendant::processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant::processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant::processing-instruction()/namespace-node()</xpath>
            <xpath part="27">descendant::processing-instruction()/namespace::namespace-node()</xpath>
            <xpath part="28">descendant::processing-instruction()/namespace::foo</xpath>
            <xpath part="29">descendant::processing-instruction()/namespace::Q{}foo</xpath>
            <xpath part="30">descendant::processing-instruction()/namespace::Q{}*</xpath>
            <xpath part="31">descendant::processing-instruction()/namespace::*:foo</xpath>
            <xpath part="32">descendant::processing-instruction()/namespace::*</xpath>
            <xpath part="33">descendant::processing-instruction()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA011">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::processing-instruction(xsl-stylesheet)
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant::processing-instruction(xsl-stylesheet)/attribute()</xpath>
            <xpath part="2">descendant::processing-instruction(xsl-stylesheet)/attribute::foo</xpath>
            <xpath part="3">descendant::processing-instruction(xsl-stylesheet)/attribute::ex:foo</xpath>
            <xpath part="4">descendant::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant::processing-instruction(xsl-stylesheet)/attribute::*:foo</xpath>
            <xpath part="7">descendant::processing-instruction(xsl-stylesheet)/attribute::ex:*</xpath>
            <xpath part="8">descendant::processing-instruction(xsl-stylesheet)/attribute::*</xpath>
            <xpath part="9">descendant::processing-instruction(xsl-stylesheet)/attribute::node()</xpath>
            <xpath part="10">descendant::processing-instruction(xsl-stylesheet)/attribute::attribute()</xpath>
            <xpath part="11">descendant::processing-instruction(xsl-stylesheet)/attribute::attribute(*)</xpath>
            <xpath part="12">descendant::processing-instruction(xsl-stylesheet)/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant::processing-instruction(xsl-stylesheet)/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant::processing-instruction(xsl-stylesheet)/@foo</xpath>
            <xpath part="15">descendant::processing-instruction(xsl-stylesheet)/@ex:foo</xpath>
            <xpath part="16">descendant::processing-instruction(xsl-stylesheet)/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant::processing-instruction(xsl-stylesheet)/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant::processing-instruction(xsl-stylesheet)/@*:foo</xpath>
            <xpath part="19">descendant::processing-instruction(xsl-stylesheet)/@ex:*</xpath>
            <xpath part="20">descendant::processing-instruction(xsl-stylesheet)/@*</xpath>
            <xpath part="21">descendant::processing-instruction(xsl-stylesheet)/@node()</xpath>
            <xpath part="22">descendant::processing-instruction(xsl-stylesheet)/@attribute()</xpath>
            <xpath part="23">descendant::processing-instruction(xsl-stylesheet)/@attribute(*)</xpath>
            <xpath part="24">descendant::processing-instruction(xsl-stylesheet)/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant::processing-instruction(xsl-stylesheet)/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant::processing-instruction(xsl-stylesheet)/namespace-node()</xpath>
            <xpath part="27">descendant::processing-instruction(xsl-stylesheet)/namespace::namespace-node()</xpath>
            <xpath part="28">descendant::processing-instruction(xsl-stylesheet)/namespace::foo</xpath>
            <xpath part="29">descendant::processing-instruction(xsl-stylesheet)/namespace::Q{}foo</xpath>
            <xpath part="30">descendant::processing-instruction(xsl-stylesheet)/namespace::Q{}*</xpath>
            <xpath part="31">descendant::processing-instruction(xsl-stylesheet)/namespace::*:foo</xpath>
            <xpath part="32">descendant::processing-instruction(xsl-stylesheet)/namespace::*</xpath>
            <xpath part="33">descendant::processing-instruction(xsl-stylesheet)/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA012">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::processing-instruction('xsl-stylesheet')
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant::processing-instruction('xsl-stylesheet')/attribute()</xpath>
            <xpath part="2">descendant::processing-instruction('xsl-stylesheet')/attribute::foo</xpath>
            <xpath part="3">descendant::processing-instruction('xsl-stylesheet')/attribute::ex:foo</xpath>
            <xpath part="4">descendant::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant::processing-instruction('xsl-stylesheet')/attribute::*:foo</xpath>
            <xpath part="7">descendant::processing-instruction('xsl-stylesheet')/attribute::ex:*</xpath>
            <xpath part="8">descendant::processing-instruction('xsl-stylesheet')/attribute::*</xpath>
            <xpath part="9">descendant::processing-instruction('xsl-stylesheet')/attribute::node()</xpath>
            <xpath part="10">descendant::processing-instruction('xsl-stylesheet')/attribute::attribute()</xpath>
            <xpath part="11">descendant::processing-instruction('xsl-stylesheet')/attribute::attribute(*)</xpath>
            <xpath part="12">descendant::processing-instruction('xsl-stylesheet')/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant::processing-instruction('xsl-stylesheet')/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant::processing-instruction('xsl-stylesheet')/@foo</xpath>
            <xpath part="15">descendant::processing-instruction('xsl-stylesheet')/@ex:foo</xpath>
            <xpath part="16">descendant::processing-instruction('xsl-stylesheet')/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant::processing-instruction('xsl-stylesheet')/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant::processing-instruction('xsl-stylesheet')/@*:foo</xpath>
            <xpath part="19">descendant::processing-instruction('xsl-stylesheet')/@ex:*</xpath>
            <xpath part="20">descendant::processing-instruction('xsl-stylesheet')/@*</xpath>
            <xpath part="21">descendant::processing-instruction('xsl-stylesheet')/@node()</xpath>
            <xpath part="22">descendant::processing-instruction('xsl-stylesheet')/@attribute()</xpath>
            <xpath part="23">descendant::processing-instruction('xsl-stylesheet')/@attribute(*)</xpath>
            <xpath part="24">descendant::processing-instruction('xsl-stylesheet')/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant::processing-instruction('xsl-stylesheet')/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant::processing-instruction('xsl-stylesheet')/namespace-node()</xpath>
            <xpath part="27">descendant::processing-instruction('xsl-stylesheet')/namespace::namespace-node()</xpath>
            <xpath part="28">descendant::processing-instruction('xsl-stylesheet')/namespace::foo</xpath>
            <xpath part="29">descendant::processing-instruction('xsl-stylesheet')/namespace::Q{}foo</xpath>
            <xpath part="30">descendant::processing-instruction('xsl-stylesheet')/namespace::Q{}*</xpath>
            <xpath part="31">descendant::processing-instruction('xsl-stylesheet')/namespace::*:foo</xpath>
            <xpath part="32">descendant::processing-instruction('xsl-stylesheet')/namespace::*</xpath>
            <xpath part="33">descendant::processing-instruction('xsl-stylesheet')/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA013">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant::text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant::text()/attribute()</xpath>
            <xpath part="2">descendant::text()/attribute::foo</xpath>
            <xpath part="3">descendant::text()/attribute::ex:foo</xpath>
            <xpath part="4">descendant::text()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant::text()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant::text()/attribute::*:foo</xpath>
            <xpath part="7">descendant::text()/attribute::ex:*</xpath>
            <xpath part="8">descendant::text()/attribute::*</xpath>
            <xpath part="9">descendant::text()/attribute::node()</xpath>
            <xpath part="10">descendant::text()/attribute::attribute()</xpath>
            <xpath part="11">descendant::text()/attribute::attribute(*)</xpath>
            <xpath part="12">descendant::text()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant::text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant::text()/@foo</xpath>
            <xpath part="15">descendant::text()/@ex:foo</xpath>
            <xpath part="16">descendant::text()/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant::text()/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant::text()/@*:foo</xpath>
            <xpath part="19">descendant::text()/@ex:*</xpath>
            <xpath part="20">descendant::text()/@*</xpath>
            <xpath part="21">descendant::text()/@node()</xpath>
            <xpath part="22">descendant::text()/@attribute()</xpath>
            <xpath part="23">descendant::text()/@attribute(*)</xpath>
            <xpath part="24">descendant::text()/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant::text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant::text()/namespace-node()</xpath>
            <xpath part="27">descendant::text()/namespace::namespace-node()</xpath>
            <xpath part="28">descendant::text()/namespace::foo</xpath>
            <xpath part="29">descendant::text()/namespace::Q{}foo</xpath>
            <xpath part="30">descendant::text()/namespace::Q{}*</xpath>
            <xpath part="31">descendant::text()/namespace::*:foo</xpath>
            <xpath part="32">descendant::text()/namespace::*</xpath>
            <xpath part="33">descendant::text()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA014">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::comment()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant-or-self::comment()/attribute()</xpath>
            <xpath part="2">descendant-or-self::comment()/attribute::foo</xpath>
            <xpath part="3">descendant-or-self::comment()/attribute::ex:foo</xpath>
            <xpath part="4">descendant-or-self::comment()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant-or-self::comment()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant-or-self::comment()/attribute::*:foo</xpath>
            <xpath part="7">descendant-or-self::comment()/attribute::ex:*</xpath>
            <xpath part="8">descendant-or-self::comment()/attribute::*</xpath>
            <xpath part="9">descendant-or-self::comment()/attribute::node()</xpath>
            <xpath part="10">descendant-or-self::comment()/attribute::attribute()</xpath>
            <xpath part="11">descendant-or-self::comment()/attribute::attribute(*)</xpath>
            <xpath part="12">descendant-or-self::comment()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant-or-self::comment()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant-or-self::comment()/@foo</xpath>
            <xpath part="15">descendant-or-self::comment()/@ex:foo</xpath>
            <xpath part="16">descendant-or-self::comment()/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant-or-self::comment()/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant-or-self::comment()/@*:foo</xpath>
            <xpath part="19">descendant-or-self::comment()/@ex:*</xpath>
            <xpath part="20">descendant-or-self::comment()/@*</xpath>
            <xpath part="21">descendant-or-self::comment()/@node()</xpath>
            <xpath part="22">descendant-or-self::comment()/@attribute()</xpath>
            <xpath part="23">descendant-or-self::comment()/@attribute(*)</xpath>
            <xpath part="24">descendant-or-self::comment()/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant-or-self::comment()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant-or-self::comment()/namespace-node()</xpath>
            <xpath part="27">descendant-or-self::comment()/namespace::namespace-node()</xpath>
            <xpath part="28">descendant-or-self::comment()/namespace::foo</xpath>
            <xpath part="29">descendant-or-self::comment()/namespace::Q{}foo</xpath>
            <xpath part="30">descendant-or-self::comment()/namespace::Q{}*</xpath>
            <xpath part="31">descendant-or-self::comment()/namespace::*:foo</xpath>
            <xpath part="32">descendant-or-self::comment()/namespace::*</xpath>
            <xpath part="33">descendant-or-self::comment()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA015">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::processing-instruction()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant-or-self::processing-instruction()/attribute()</xpath>
            <xpath part="2">descendant-or-self::processing-instruction()/attribute::foo</xpath>
            <xpath part="3">descendant-or-self::processing-instruction()/attribute::ex:foo</xpath>
            <xpath part="4">descendant-or-self::processing-instruction()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant-or-self::processing-instruction()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant-or-self::processing-instruction()/attribute::*:foo</xpath>
            <xpath part="7">descendant-or-self::processing-instruction()/attribute::ex:*</xpath>
            <xpath part="8">descendant-or-self::processing-instruction()/attribute::*</xpath>
            <xpath part="9">descendant-or-self::processing-instruction()/attribute::node()</xpath>
            <xpath part="10">descendant-or-self::processing-instruction()/attribute::attribute()</xpath>
            <xpath part="11">descendant-or-self::processing-instruction()/attribute::attribute(*)</xpath>
            <xpath part="12">descendant-or-self::processing-instruction()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant-or-self::processing-instruction()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant-or-self::processing-instruction()/@foo</xpath>
            <xpath part="15">descendant-or-self::processing-instruction()/@ex:foo</xpath>
            <xpath part="16">descendant-or-self::processing-instruction()/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant-or-self::processing-instruction()/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant-or-self::processing-instruction()/@*:foo</xpath>
            <xpath part="19">descendant-or-self::processing-instruction()/@ex:*</xpath>
            <xpath part="20">descendant-or-self::processing-instruction()/@*</xpath>
            <xpath part="21">descendant-or-self::processing-instruction()/@node()</xpath>
            <xpath part="22">descendant-or-self::processing-instruction()/@attribute()</xpath>
            <xpath part="23">descendant-or-self::processing-instruction()/@attribute(*)</xpath>
            <xpath part="24">descendant-or-self::processing-instruction()/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant-or-self::processing-instruction()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant-or-self::processing-instruction()/namespace-node()</xpath>
            <xpath part="27">descendant-or-self::processing-instruction()/namespace::namespace-node()</xpath>
            <xpath part="28">descendant-or-self::processing-instruction()/namespace::foo</xpath>
            <xpath part="29">descendant-or-self::processing-instruction()/namespace::Q{}foo</xpath>
            <xpath part="30">descendant-or-self::processing-instruction()/namespace::Q{}*</xpath>
            <xpath part="31">descendant-or-self::processing-instruction()/namespace::*:foo</xpath>
            <xpath part="32">descendant-or-self::processing-instruction()/namespace::*</xpath>
            <xpath part="33">descendant-or-self::processing-instruction()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA016">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::processing-instruction(xsl-stylesheet)
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute()</xpath>
            <xpath part="2">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::foo</xpath>
            <xpath part="3">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::ex:foo</xpath>
            <xpath part="4">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::*:foo</xpath>
            <xpath part="7">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::ex:*</xpath>
            <xpath part="8">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::*</xpath>
            <xpath part="9">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::node()</xpath>
            <xpath part="10">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute()</xpath>
            <xpath part="11">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute(*)</xpath>
            <xpath part="12">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant-or-self::processing-instruction(xsl-stylesheet)/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant-or-self::processing-instruction(xsl-stylesheet)/@foo</xpath>
            <xpath part="15">descendant-or-self::processing-instruction(xsl-stylesheet)/@ex:foo</xpath>
            <xpath part="16">descendant-or-self::processing-instruction(xsl-stylesheet)/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant-or-self::processing-instruction(xsl-stylesheet)/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant-or-self::processing-instruction(xsl-stylesheet)/@*:foo</xpath>
            <xpath part="19">descendant-or-self::processing-instruction(xsl-stylesheet)/@ex:*</xpath>
            <xpath part="20">descendant-or-self::processing-instruction(xsl-stylesheet)/@*</xpath>
            <xpath part="21">descendant-or-self::processing-instruction(xsl-stylesheet)/@node()</xpath>
            <xpath part="22">descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute()</xpath>
            <xpath part="23">descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute(*)</xpath>
            <xpath part="24">descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant-or-self::processing-instruction(xsl-stylesheet)/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace-node()</xpath>
            <xpath part="27">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::namespace-node()</xpath>
            <xpath part="28">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::foo</xpath>
            <xpath part="29">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::Q{}foo</xpath>
            <xpath part="30">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::Q{}*</xpath>
            <xpath part="31">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::*:foo</xpath>
            <xpath part="32">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::*</xpath>
            <xpath part="33">descendant-or-self::processing-instruction(xsl-stylesheet)/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA017">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::processing-instruction('xsl-stylesheet')
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute()</xpath>
            <xpath part="2">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::foo</xpath>
            <xpath part="3">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::ex:foo</xpath>
            <xpath part="4">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::*:foo</xpath>
            <xpath part="7">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::ex:*</xpath>
            <xpath part="8">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::*</xpath>
            <xpath part="9">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::node()</xpath>
            <xpath part="10">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute()</xpath>
            <xpath part="11">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute(*)</xpath>
            <xpath part="12">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant-or-self::processing-instruction('xsl-stylesheet')/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant-or-self::processing-instruction('xsl-stylesheet')/@foo</xpath>
            <xpath part="15">descendant-or-self::processing-instruction('xsl-stylesheet')/@ex:foo</xpath>
            <xpath part="16">descendant-or-self::processing-instruction('xsl-stylesheet')/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant-or-self::processing-instruction('xsl-stylesheet')/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant-or-self::processing-instruction('xsl-stylesheet')/@*:foo</xpath>
            <xpath part="19">descendant-or-self::processing-instruction('xsl-stylesheet')/@ex:*</xpath>
            <xpath part="20">descendant-or-self::processing-instruction('xsl-stylesheet')/@*</xpath>
            <xpath part="21">descendant-or-self::processing-instruction('xsl-stylesheet')/@node()</xpath>
            <xpath part="22">descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute()</xpath>
            <xpath part="23">descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute(*)</xpath>
            <xpath part="24">descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant-or-self::processing-instruction('xsl-stylesheet')/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace-node()</xpath>
            <xpath part="27">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::namespace-node()</xpath>
            <xpath part="28">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::foo</xpath>
            <xpath part="29">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::Q{}foo</xpath>
            <xpath part="30">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::Q{}*</xpath>
            <xpath part="31">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::*:foo</xpath>
            <xpath part="32">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::*</xpath>
            <xpath part="33">descendant-or-self::processing-instruction('xsl-stylesheet')/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
   <test-case name="xp-striding-grounded-consumingA018">
      <description>
                CP: striding, RP: grounded, RS: consuming
                Base expression: descendant-or-self::text()
                Separators:      / 
                With axes:       attribute, namespace
                With node types: attribute, namespace
                Invariant:       none
            </description>
      <created by="Abel Braaksma" on="2014-10-16"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="Added dependency for sweep and posture tests, added @part attribute for subtests"/>
      <modified by="Abel Braaksma" on="2014-10-28" change="Changed node-type for namespace-node() tests w/o axis specifier from error to namespace, see bug#26788 (only applies to relevant tests)"/>
      <test>
         <posture-and-sweep context-posture="striding">
            <xpath part="1">descendant-or-self::text()/attribute()</xpath>
            <xpath part="2">descendant-or-self::text()/attribute::foo</xpath>
            <xpath part="3">descendant-or-self::text()/attribute::ex:foo</xpath>
            <xpath part="4">descendant-or-self::text()/attribute::Q{http://example.com}foo</xpath>
            <xpath part="5">descendant-or-self::text()/attribute::Q{http://example.com}*</xpath>
            <xpath part="6">descendant-or-self::text()/attribute::*:foo</xpath>
            <xpath part="7">descendant-or-self::text()/attribute::ex:*</xpath>
            <xpath part="8">descendant-or-self::text()/attribute::*</xpath>
            <xpath part="9">descendant-or-self::text()/attribute::node()</xpath>
            <xpath part="10">descendant-or-self::text()/attribute::attribute()</xpath>
            <xpath part="11">descendant-or-self::text()/attribute::attribute(*)</xpath>
            <xpath part="12">descendant-or-self::text()/attribute::attribute(ex:foo)</xpath>
            <xpath part="13">descendant-or-self::text()/attribute::attribute(Q{http://example.com}foo)</xpath>
            <xpath part="14">descendant-or-self::text()/@foo</xpath>
            <xpath part="15">descendant-or-self::text()/@ex:foo</xpath>
            <xpath part="16">descendant-or-self::text()/@Q{http://example.com}foo</xpath>
            <xpath part="17">descendant-or-self::text()/@Q{http://example.com}*</xpath>
            <xpath part="18">descendant-or-self::text()/@*:foo</xpath>
            <xpath part="19">descendant-or-self::text()/@ex:*</xpath>
            <xpath part="20">descendant-or-self::text()/@*</xpath>
            <xpath part="21">descendant-or-self::text()/@node()</xpath>
            <xpath part="22">descendant-or-self::text()/@attribute()</xpath>
            <xpath part="23">descendant-or-self::text()/@attribute(*)</xpath>
            <xpath part="24">descendant-or-self::text()/@attribute(ex:foo)</xpath>
            <xpath part="25">descendant-or-self::text()/@attribute(Q{http://example.com}foo)</xpath>
            <xpath part="26">descendant-or-self::text()/namespace-node()</xpath>
            <xpath part="27">descendant-or-self::text()/namespace::namespace-node()</xpath>
            <xpath part="28">descendant-or-self::text()/namespace::foo</xpath>
            <xpath part="29">descendant-or-self::text()/namespace::Q{}foo</xpath>
            <xpath part="30">descendant-or-self::text()/namespace::Q{}*</xpath>
            <xpath part="31">descendant-or-self::text()/namespace::*:foo</xpath>
            <xpath part="32">descendant-or-self::text()/namespace::*</xpath>
            <xpath part="33">descendant-or-self::text()/namespace::node()</xpath>
         </posture-and-sweep>
      </test>
      <result>
         <assert-posture-and-sweep result-posture="grounded" result-sweep="consuming"/>
      </result>
   </test-case>
</test-set>